{"version":3,"sources":["index.js"],"names":["CalculatorNumKey","props","className","onClick","onButtonClick","number","CalculatorOthKey","CalculatorOpKey","CalculatorLongKey","CalculatorKeypad","xs","style","padding","color","CalculatorScreen","equation","result","CalculatorBody","state","currentOperation","Object","event","userInput","currentInputButton","target","innerHTML","trim","clear","length","setState","currentOp","includes","num1","substring","indexOf","num2","eval","this","React","Component","Calculator","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fe365b4a.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport {Container, Row, Col} from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import PropTypes from \"prop-types\";\n\n\n\nconst CalculatorNumKey =(props)=>(\n    <button className=\"key keyNum\" onClick = {props.onButtonClick}>{props.number} </button>\n);\n\nconst CalculatorOthKey =(props)=>(\n    <button className=\"key keyOth\" onClick = {props.onButtonClick}>{props.number} </button>\n);\n\nconst CalculatorOpKey =(props)=>(\n    <button className=\"key keyOp\" onClick = {props.onButtonClick}>{props.number} </button>\n);\n\nconst CalculatorLongKey =(props)=>(\n    <button className=\"longKey keyNum\" onClick = {props.onButtonClick}>{props.number} </button>\n    );\n\nconst CalculatorKeypad =(props) =>(\n    <Container>\n        <Row>\n            <Col xs=\"3\" style={{padding:\"0px\"}}><CalculatorOthKey onButtonClick={props.onButtonClick} number=\"C\" /></Col>\n            <Col xs=\"3\" style={{padding:\"0px\"}}><CalculatorOthKey onButtonClick={props.onButtonClick} number=\"CE\" /></Col>\n            <Col xs=\"3\" style={{padding:\"0px\"}}><CalculatorOthKey onButtonClick={props.onButtonClick} number=\"%\" /></Col>\n            <Col xs=\"3\" style={{padding:\"0px\"}}><CalculatorOpKey onButtonClick={props.onButtonClick} number=\"/\" /></Col>\n        </Row>\n        <Row>\n            <Col xs=\"3\" style={{padding:\"0px\"}}><CalculatorNumKey onButtonClick={props.onButtonClick} number=\"7\" /></Col>\n            <Col xs=\"3\" style={{padding:\"0px\"}}><CalculatorNumKey onButtonClick={props.onButtonClick} number=\"8\" /></Col>\n            <Col xs=\"3\" style={{padding:\"0px\"}}><CalculatorNumKey onButtonClick={props.onButtonClick} number=\"9\" /></Col>\n            <Col xs=\"3\" style={{padding:\"0px\"}}><CalculatorOpKey onButtonClick={props.onButtonClick} number=\"X\" /></Col>\n        </Row>\n        <Row>\n            <Col xs=\"3\" style={{padding:\"0px\"}}><CalculatorNumKey onButtonClick={props.onButtonClick} number=\"4\" color = \"DarkSlateGray\"/></Col>\n            <Col xs=\"3\" style={{padding:\"0px\"}}><CalculatorNumKey onButtonClick={props.onButtonClick} number=\"5\" color = \"DarkSlateGray\"/></Col>\n            <Col xs=\"3\" style={{padding:\"0px\"}}><CalculatorNumKey onButtonClick={props.onButtonClick} number=\"6\" color = \"DarkSlateGray\"/></Col>\n            <Col xs=\"3\" style={{padding:\"0px\"}}><CalculatorOpKey onButtonClick={props.onButtonClick} number=\"-\" color = \"orange\"/></Col>\n        </Row>\n        <Row>\n            <Col xs=\"3\" style={{padding:\"0px\"}}><CalculatorNumKey onButtonClick={props.onButtonClick} number=\"1\" /></Col>\n            <Col xs=\"3\" style={{padding:\"0px\"}}><CalculatorNumKey onButtonClick={props.onButtonClick} number=\"2\" /></Col>\n            <Col xs=\"3\" style={{padding:\"0px\"}}><CalculatorNumKey onButtonClick={props.onButtonClick} number=\"3\" /></Col>\n            <Col xs=\"3\" style={{padding:\"0px\"}}><CalculatorOpKey onButtonClick={props.onButtonClick} number=\"+\" /></Col>\n        </Row>\n        <Row>\n            <Col xs=\"6\" style={{padding:\"0px\"}}><CalculatorLongKey onButtonClick={props.onButtonClick} number=\"0\"/></Col>\n            <Col xs=\"3\" style={{padding:\"0px\"}}><CalculatorNumKey onButtonClick={props.onButtonClick} number=\".\" /></Col>\n            <Col xs=\"3\" style={{padding:\"0px\"}}><CalculatorOpKey onButtonClick={props.onButtonClick} number=\"=\" /></Col>\n        </Row>\n    </Container>\n)\n\nconst CalculatorScreen =(props) =>(\n    <div className=\"displayScreen\">\n        <div  className=\"textArea\">{props.equation}</div>   \n        <div  className=\"textArea\">{props.result}</div>  \n    </div>        \n);    \n\nclass CalculatorBody extends React.Component{\n    state={\n        result:'',\n        equation:'',\n        currentOperation:Object\n    }\n\n    onButtonClick = event =>{\n        let userInput = this.state.result;\n        const currentInputButton = event.target.innerHTML.trim();\n        let result = this.state.result;\n        if (currentInputButton === 'C')\n             return this.clear();\n        else if (((currentInputButton >=0) && (currentInputButton <= 9))||(currentInputButton === '.')){\n            if(userInput.length<9){\n            userInput +=currentInputButton.trim();\n            this.setState({result:userInput});\n            }\n        }\n        else if ((currentInputButton === '+')||(currentInputButton === '-')||(currentInputButton === 'X')||\n        (currentInputButton === '/')||(currentInputButton === '%')||(currentInputButton === '^')){\n            if(userInput.length===0)\n            {\n                // do nothing.\n            }\n            else\n            {\n                this.setState({currentOperation:event.target});\n                event.target.className='keyPressed';\n                if(currentInputButton==='%')\n                    userInput=userInput/100;\n                else\n                    userInput =userInput+currentInputButton;\n                this.setState({result:userInput});\n            }\n        }\n       \n\n        else if (currentInputButton === '=')\n        {     \n            let currentOp = this.state.currentOperation;\n            currentOp.className=\"key keyOp\";\n            if(userInput.includes (\"X\")) \n            { \n                var num1 = userInput.substring(0,userInput.indexOf('X'));\n                var num2 = userInput.substring(userInput.indexOf('X')+1);\n                result = num1*num2;\n            }\n            else  \n                result = eval(userInput);\n\n            this.setState(\n                {\n                equation: userInput,\n                result: result\n                }\n            );\n        }   \n    }\n        clear(){\n            this.setState({\n                result:'',\n                equation:''\n            });\n        }\n    render(){\n        return(\n            <div className=\"calcbody\">\n                <CalculatorScreen equation={this.state.equation} result={this.state.result} />\n                <CalculatorKeypad onButtonClick={this.onButtonClick}/>\n            </div>\n        );\n    }\n}\n\nconst Calculator = () =>(\n    <div className=\"app\">\n        <CalculatorBody/>\n    </div>\n)\n\nReactDOM.render(<Calculator/>, document.getElementById('root'));\n\n\n"],"sourceRoot":""}