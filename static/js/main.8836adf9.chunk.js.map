{"version":3,"sources":["index.js"],"names":["CalculatorKey","props","className","style","backgroundColor","color","onClick","onButtonClick","number","CalculatorKeypad","xs","padding","CalculatorScreen","equation","result","CalculatorBody","state","event","userInput","currentInputButton","target","innerHTML","trim","clear","setState","eval","this","React","Component","Calculator","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8836adf9.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport {Container, Row, Col} from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import PropTypes from \"prop-types\";\n\n\n\nconst CalculatorKey =(props)=>(\n<button className=\"key\" style={{backgroundColor:props.color}} onClick = {props.onButtonClick}>{props.number} </button>\n);\n\nconst CalculatorKeypad =(props) =>(\n    <Container>\n        <Row>\n            <Col xs=\"3\" style={{padding:\"0px\"}}><CalculatorKey onButtonClick={props.onButtonClick} number=\"C\" color = \"gray\"/></Col>\n            <Col xs=\"3\" style={{padding:\"0px\"}}><CalculatorKey onButtonClick={props.onButtonClick} number=\"\" color = \"gray\"/></Col>\n            <Col xs=\"3\" style={{padding:\"0px\"}}><CalculatorKey onButtonClick={props.onButtonClick} number=\"%\" color = \"gray\"/></Col>\n            <Col xs=\"3\" style={{padding:\"0px\"}}><CalculatorKey onButtonClick={props.onButtonClick} number=\"/\" color = \"orange\"/></Col>\n        </Row>\n        <Row>\n            <Col xs=\"3\" style={{padding:\"0px\"}}><CalculatorKey onButtonClick={props.onButtonClick} number=\"7\" color = \"DarkSlateGray\"/></Col>\n            <Col xs=\"3\" style={{padding:\"0px\"}}><CalculatorKey onButtonClick={props.onButtonClick} number=\"8\" color = \"DarkSlateGray\"/></Col>\n            <Col xs=\"3\" style={{padding:\"0px\"}}><CalculatorKey onButtonClick={props.onButtonClick} number=\"9\" color = \"DarkSlateGray\"/></Col>\n            <Col xs=\"3\" style={{padding:\"0px\"}}><CalculatorKey onButtonClick={props.onButtonClick} number=\"*\" color = \"orange\"/></Col>\n        </Row>\n        <Row>\n            <Col xs=\"3\" style={{padding:\"0px\"}}><CalculatorKey onButtonClick={props.onButtonClick} number=\"4\" color = \"DarkSlateGray\"/></Col>\n            <Col xs=\"3\" style={{padding:\"0px\"}}><CalculatorKey onButtonClick={props.onButtonClick} number=\"5\" color = \"DarkSlateGray\"/></Col>\n            <Col xs=\"3\" style={{padding:\"0px\"}}><CalculatorKey onButtonClick={props.onButtonClick} number=\"6\" color = \"DarkSlateGray\"/></Col>\n            <Col xs=\"3\" style={{padding:\"0px\"}}><CalculatorKey onButtonClick={props.onButtonClick} number=\"-\" color = \"orange\"/></Col>\n        </Row>\n        <Row>\n            <Col xs=\"3\" style={{padding:\"0px\"}}><CalculatorKey onButtonClick={props.onButtonClick} number=\"1\" color = \"DarkSlateGray\"/></Col>\n            <Col xs=\"3\" style={{padding:\"0px\"}}><CalculatorKey onButtonClick={props.onButtonClick} number=\"2\" color = \"DarkSlateGray\"/></Col>\n            <Col xs=\"3\" style={{padding:\"0px\"}}><CalculatorKey onButtonClick={props.onButtonClick} number=\"3\" color = \"DarkSlateGray\"/></Col>\n            <Col xs=\"3\" style={{padding:\"0px\"}}><CalculatorKey onButtonClick={props.onButtonClick} number=\"+\" color = \"orange\"/></Col>\n        </Row>\n        <Row>\n            <Col xs=\"3\" style={{padding:\"0px\"}}><CalculatorKey onButtonClick={props.onButtonClick} number=\"0\" color = \"DarkSlateGray\"/></Col>\n            <Col xs=\"3\" style={{padding:\"0px\"}}><CalculatorKey onButtonClick={props.onButtonClick} number=\"\" color = \"DarkSlateGray\"/></Col>\n            <Col xs=\"3\" style={{padding:\"0px\"}}><CalculatorKey onButtonClick={props.onButtonClick} number=\".\" color = \"DarkSlateGray\"/></Col>\n            <Col xs=\"3\" style={{padding:\"0px\"}}><CalculatorKey onButtonClick={props.onButtonClick} number=\"=\" color = \"orange\"/></Col>\n        </Row>\n    </Container>\n)\n\nconst CalculatorScreen =(props) =>(\n    <div className=\"displayScreen\">\n        <div  className=\"textArea\">{props.equation}</div>   \n        <div  className=\"textArea\">{props.result}</div>  \n    </div>        \n);    \n\nclass CalculatorBody extends React.Component{\n    state={\n        result:'',\n        equation:''\n    }\n\n    onButtonClick = event =>{\n        let userInput = this.state.result;\n        const currentInputButton = event.target.innerHTML.trim();\n        let result = this.state.result;\n        if (currentInputButton === 'C')\n             return this.clear();\n        else if (((currentInputButton >=0) && (currentInputButton <= 9))||(currentInputButton === '.')){\n            userInput +=currentInputButton.trim();\n            this.setState({result:userInput});\n        }\n        else if ((currentInputButton === '+')||(currentInputButton === '-')||(currentInputButton === '*')||\n                 (currentInputButton === '/')||(currentInputButton === '%')||(currentInputButton === '^')){\n             userInput =userInput+currentInputButton;\n             this.setState({result:userInput});\n        }\n       \n\n        else if (currentInputButton === '=')\n        {            \n            result = eval(userInput);\n            this.setState(\n                {\n                equation: userInput,\n                result: result\n                }\n            );\n        }   \n    }\n        clear(){\n            this.setState({\n                result:'',\n                equation:''\n            });\n        }\n    render(){\n        return(\n            <div className=\"calcbody\">\n                <CalculatorScreen equation={this.state.equation} result={this.state.result} />\n                <CalculatorKeypad onButtonClick={this.onButtonClick}/>\n            </div>\n        );\n    }\n}\n\nconst Calculator = () =>(\n    <div className=\"app\">\n        <CalculatorBody/>\n    </div>\n)\n\nReactDOM.render(<Calculator/>, document.getElementById('root'));\n\n\n"],"sourceRoot":""}